
// 
// FlowScript decompiled by AtlusScriptLib by TGE (2017)
// In the unfortunate case of any bugs, please report them back to me.
// 


// 
// Imports
// 

import( "lmap.bf.msg" );

// 
// Script-level variable definitions
// 

int sel;

// 
// Procedure declarations
// 

void init_lmap()
{
    
    if ( FUNCTION_004C() == 1 )
    {
        FLD_FUNCTION_0007( 10242, 0 );
        FLD_FUNCTION_0007( 10243, 0 );
        FLD_FUNCTION_0007( 10253, 0 );
    }
    else if ( FUNCTION_004C() == 7 )
    {
        FLD_FUNCTION_0007( 10242, 0 );
        FLD_FUNCTION_0007( 10243, 0 );
        FLD_FUNCTION_0007( 10253, 1 );
    }
    else 
    {
        FLD_FUNCTION_0007( 10242, 1 );
        FLD_FUNCTION_0007( 10243, 1 );
        FLD_FUNCTION_0007( 10253, 0 );
    }

}

// School
void sel_000()
{
    
    if ( FUNCTION_0037( 4, 12 ) == 1 )
    {
        FUNCTION_0030( 6, 15, 1, 0 );
    }
    else if ( FUNCTION_0036() == 3 )
    {
        
        if ( FUNCTION_000A( 0 + 0x0400 + 0x0800 + 172 ) == 1 )
        {
            FUNCTION_0030( 6, 15, 1, 0 );
        }
        else 
        {
            FUNCTION_0030( 6, 15, 0, 0 );
        }

    }
    else 
    {
        sel = selField(8, 7);
        
        if ( sel == 6 )
            FUNCTION_0030( 6, 14, 0, 0 );
        else if ( sel == 7 )
            FUNCTION_003B( 0 );
        else 
            FUNCTION_0030( 6, sel + 1, 0, 0 );
    }

}
// Shopping District
void sel_001() 
{
    sel = selField(7, 3);

    switch (sel)
    {
    case 0:
        FUNCTION_0030( 8, 1, 0, 0 );
        break;
    case 1:
        if ( FUNCTION_000A( 0 + 0x0400 + 0x0800 + 172 ) == 1 )
            FUNCTION_0030( 8, 2, 8, 0 );
        else
            FUNCTION_0030( 8, 2, 0, 0 );        
        break;
    case 2:
        FUNCTION_0030( 8, 9, 0, 0 );
        break;
    case 3:
        FUNCTION_003B( 1 );
        break;
    }
}

// Junes
void sel_002() 
{
    FUNCTION_0030( 9, 4, 0, 0 );
}

// Flood Plain
void sel_003()
{
    sel = selField(9, 2);
    
    if ( sel != 2 )
        FUNCTION_0030( 10, sel + 1, 0, 0 );
    else 
        FUNCTION_003B( 3 );

}

// School Zone (?)
void sel_004()
{
    FUNCTION_0030( 17, 1, 0, 0 );
}

// Dojima Residence Front
void sel_005()
{
    FUNCTION_0030( 7, 1, 0, 0 );
}

// Okina Station Front
void sel_006()
{
    FUNCTION_0016( 1, 5 );
    FUNCTION_0017();
    FUNCTION_0030( 11, 1, 0, 0 );
}

// Mountian Road (?)
void sel_007()
{
    FUNCTION_0030( 18, 1, 0, 0 );
}

// Shichiri Beach
void sel_008()
{
    FUNCTION_0022( 97, 1 );
    
    if ( FUNCTION_004C() == 3 )
    {
        FUNCTION_0022( 169, 3 );
        FUNCTION_006B( 2 );
    }

    FUNCTION_0066( 0 );
    FUNCTION_0066( 1 );
    
    if ( FUNCTION_000A( 0 + 0x0400 + 0x0800 + 351 ) == 0 )
    {
        FUNCTION_000B( 0 + 0x0400 + 0x0800 + 351 );
        FUNCTION_0032( 883, 510, 0 );
    }

    FUNCTION_000B( 0 + 0x0400 + 0x0800 + 189 );
    FUNCTION_0030( 17, 4, 0, 0 );
}

//
// Calls the message prompt to choose the location and returns the chosen option
// 
// msgIndex: The message index inside "lmap.bf.msg"
// cancelIndex: The cancel option index
//
int selField(int msgIndex, int cancelIndex)
{
    int where;

    FUNCTION_0001();
    FUNCTION_0000( 6 );
    FUNCTION_0007( 14, cancelIndex );
    where = FUNCTION_0003( msgIndex );
    FUNCTION_0002();

    return where;
}

